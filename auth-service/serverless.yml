service: auth-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-southeast-2
  environment:
    AUTH0_PUBLIC_KEY: ${file(secret.pem)}

resources:
  Resources:
    # This response is needed for custom authorizer failures cors support ¯\_(ツ)_/¯
    GatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: EXPIRED_TOKEN
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'
    AuthFailureGatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'

functions:
  auth:
    handler: handler.auth
  publicEndpoint:
    handler: handler.publicEndpoint
    events:
      - http:
          path: public
          method: POST
          cors: true
  privateEndpoint:
    handler: handler.privateEndpoint
    events:
      - http:
          path: private
          method: POST
          authorizer: auth
          cors: true

plugins:
  - serverless-esbuild

custom:
  bundle:
    linting: false