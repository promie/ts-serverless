service: auction-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-2
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:Scan
        - dynamodb:GetItem
      Resource: ${self:custom.AuctionsTable.arn}

resources:
  Resources:
    AuctionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: AuctionsTable-${self:provider.stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

functions:
  createAuction:
    handler: handler.createAuctionHandler
    events:
      - http:
          method: POST
          path: /auction
  getAuctions:
    handler: handler.getAuctionsHandler
    events:
      - http:
          method: GET
          path: /auctions
  getAuctionsById:
    handler: handler.getAuctionsByIdHandler
    events:
      - http:
          method: GET
          path: /auctions/{id}
  placeBid:
    handler: handler.placeBidHandler
    events:
      - http:
          method: PATCH
          path: /auctions/{id}/bid


plugins:
  - serverless-esbuild

custom:
  AuctionsTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn
